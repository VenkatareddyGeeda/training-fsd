Agenda:

Modules
Form validations

Modules :
=============
->Modules are like import/export code to another js files

 Named Modules : Definenly while importing should use the same name that you are defining exactly with in {} You can export as many modules of code that you want.

 Default Modules:  While importing can use any name that you want. You can export only one modules of code in one source file. You should use the default keyword while exporting.

Code:
==========
index.html:
===========
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
</head>
<body>
   
    <h1 id="hello"></h1>
    <script type="module" src="script2.js">
    </script>
</body>
</html>

  script1.js
====================  
 const collegeName ="mru" ;
 const marks = 100;
 const m1 = "pass";
 function Tasking(){
    console.log("I am learning code now at  "+collegeName);
    document.getElementById("hello").innerText="I am learning code now at  "+collegeName
}

export {collegeName, Tasking};
export default marks;


script2.js
=============

  //import  {collegeName}  from "./script1.js";
import  {collegeName, Tasking as tasking}  from "./script1.js";
import total from "./script1.js"

tasking();
console.log(total);

Form validations: Validations are like checkers for values that user enters in each field in your form.

  1. Create a signup form that  contains
 username(!empty),
 email(@, !empty), 
password(should be 6) and 
confirm password(same as password value, !empty), 
once you click on submit button, a alert should be popped up on you screen "form is submitted successfully" if and only if all the validations are correct.

Code with HTML, CSS and JS:
==============================

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Validation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f4f4f4;
        }
        .container {
            width: 350px;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-top: 10px;
            font-weight: bold;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .error {
            color: red;
            font-size: 12px;
            margin-top: 5px;
        }
        button {
            width: 100%;
            padding: 10px;
            margin-top: 15px;
            border: none;
            background-color: #28a745;
            color: white;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Register</h2>
        <form id="myForm">
            <label for="username">Username:</label>
            <input type="text" id="username" name="username">
            <div class="error" id="usernameError"></div>
            
            <label for="email">Email:</label>
            <input type="email" id="email" name="email">
            <div class="error" id="emailError"></div>
            
            <label for="password">Password:</label>
            <input type="password" id="password" name="password">
            <div class="error" id="passwordError"></div>
            
            <label for="confirmPassword">Confirm Password:</label>
            <input type="password" id="confirmPassword" name="confirmPassword">
            <div class="error" id="confirmPasswordError"></div>
            
            <button type="submit">Submit</button>
        </form>
    </div>

    <script>
        document.getElementById("myForm").addEventListener("submit", function(event) {
            event.preventDefault();
            let isValid = true;

            let username = document.getElementById("username").value;
            let email = document.getElementById("email").value;
            let password = document.getElementById("password").value;
            let confirmPassword = document.getElementById("confirmPassword").value;

            document.getElementById("usernameError").innerText = "";
            document.getElementById("emailError").innerText = "";
            document.getElementById("passwordError").innerText = "";
            document.getElementById("confirmPasswordError").innerText = "";

            if (username.trim() === "") {
                document.getElementById("usernameError").innerText = "Username is required";
                isValid = false;
            }

            if (email.trim() === "" || !email.includes("@")) {
                document.getElementById("emailError").innerText = "Valid email is required";
                isValid = false;
            }

            if (password.length < 6) {
                document.getElementById("passwordError").innerText = "Password must be at least 6 characters";
                isValid = false;
            }

            if (password !== confirmPassword) {
                document.getElementById("confirmPasswordError").innerText = "Passwords do not match";
                isValid = false;
            }

            if (isValid) {
                alert("Form submitted successfully!");
            }
        });
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            display:flex ;
            flex-direction: column;
            align-items: center;
            height: 100vh;
        }
        .light-bulb{
            width:150px
        }
        .button{
            margin-top: 300px;
            padding: 10px 20px ;
            font-size: 10px;
            cursor: pointer;
        }
    </style>
</head>
<body id="body">
    <img src="https://d1tgh8fmlzexmh.cloudfront.net/ccbp-dynamic-webapps/bulb-go-off-img.png" class="light-bulb" id="bulbImage" alt ="" style="position: absolute; left: 0px; transition: left 2s;"/>
    <img src="https://d1tgh8fmlzexmh.cloudfront.net/ccbp-dynamic-webapps/bulb-go-off-img.png" class="light-bulb" id="bulbImage2" alt ="" style="position: absolute; right: 0px; transition: right 2s;"/>
    <button class="button" id="toggleButton" onClick="toggleLight()">Turn On</button>
    <script>
        let isOn=false;
        let bulbLeft = 0;
        let bulbRight = 0;
        function toggleLight(){
            const body=document.getElementById("body")
            const bulbImage=document.getElementById('bulbImage')
            const bulbImage2=document.getElementById('bulbImage2')
            const toggleButton=document.getElementById('toggleButton')
            if(isOn=!isOn);
            if(isOn){
                body.style.backgroundColor='lightyellow ';
                bulbImage.src="https://d1tgh8fmlzexmh.cloudfront.net/ccbp-dynamic-webapps/bulb-go-on-img.png";
                bulbImage2.src="https://d1tgh8fmlzexmh.cloudfront.net/ccbp-dynamic-webapps/bulb-go-on-img.png";
                toggleButton.innerText='Turn Off';
                bulbLeft = window.innerWidth - 150;
                bulbImage.style.left = bulbLeft + 'px';
                bulbRight = window.innerWidth - 150;
                bulbImage2.style.right = bulbRight + 'px';
            }else{
                body.style.backgroundColor='white';
                bulbImage.src="https://d1tgh8fmlzexmh.cloudfront.net/ccbp-dynamic-webapps/bulb-go-off-img.png";
                bulbImage2.src="https://d1tgh8fmlzexmh.cloudfront.net/ccbp-dynamic-webapps/bulb-go-off-img.png";
                toggleButton.innerText="Turn On";
                bulbLeft = 0;
                bulbImage.style.left = bulbLeft + 'px';
                bulbRight = 0;
                bulbImage2.style.right = bulbRight + 'px';
            }
        }
    </script>
</body>
</html>












 







      





























