<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
    <!-- <div id="root"></div>
    <script src="a.js"></script> -->
    
    <!-- <div id="app">
        <script type="text/babel">
            const n=10;
            const m=<h1>Hello</h1>
            const e=document.getElementById('app');
            const root=ReactDOM.createRoot(e);
            root.render(m)
        </script>
    </div> -->

    <!-- <div id="a">
        <script>
            const b=React.createElement('h1',{id:'c'},"I am ravi")
            const e=document.getElementById("a")
            const root=ReactDOM.createRoot(e)
            root.render(b);

        </script> -->

        <!-- <div id="a">
            <script type="text/babel">
                const n=5
                const m=<h1>React is{n+5} times bettrt than jsx</h1>
                const e=document.getElementById('a');
                const root=ReactDOM.createRoot(e)
                root.render(m)
            </script>
        </div> -->

        <!-- <div id="a">
            <script type="text/babel">
                const App=()=>{
                    const isloggedIn=true;
                    return(
                    <div>
                        {isloggedIn?(<h1>Welcome back,user</h1>):(<h1>please login</h1>)()}
                        {isloggedIn &&<h1>you have a new notification</h1>}
                        </div>
                    )
                }
                        const root=ReactDOM.createRoot(document.getElementById("a"));
                        root.render(<App/>)
                    
                
            </script>
        </div> -->
        <div id="a">
            <script type="text/babel">
                function getGreeting(name){
                    return `Hello,${name}! Welcome to react`
                }
                function Greeting(){
                    const name="ram"
                    return <h1>{getGreeting(name)}</h1>

                }
                const root=ReactDOM.createRoot(document.getElementById('a'))
                root.render(<Greeting/>)
            </script>
        </div>

  
</body>
</html>

import React from 'react';
function Greeting ({isLoggedIn}){
    if(isLoggedIn){
        return<h1>Welcome Back</h1>

    }else{
        return<h1>Please Login</h1>
    }
}
export default Greeting;

import React from 'react';
import './App.css';
import Greeting from './Greeting';

function App() {
  const isLoggedIn=false;
  return (
    <div className='App' >
      <Greeting isLoggedIn={isLoggedIn} />
    </div>
    
   
  );
}

export default App;



import React ,{useState}from 'react';
import './App.css';
// const Counter=()=>{
// const[count,setCount]=useState(0)
// return(
//   <div class="name">
//     <h1 >{count}</h1>
//     <button onClick={()=>setCount(count+1)} class='name1'> inc</button>
//     <button onClick={()=>setCount(count-1)} class='name1'>dec</button>
//   </div>
// );
// }
// export default Counter;
const ThemeToggler=()=>{
  const[theme,setTheme]=useState('light')
  const toggleTheme=()=>{
    setTheme(prevTheme=>(prevTheme==='ligth'?'dark':'ligth'))
  }
  return(
    <div style={{backgroundColor:theme==='ligth'?'white':'black',color:theme==='ligth'?'black':'white', textAlign:'center'}}>
      <h1>The current theme is{theme}</h1>
      <button onClick={toggleTheme}>toggletheme</button>
    </div>
  )
};
export default  ThemeToggler;


import ChildA from './ChildA.js';
import ChildB from './ChildB.js';
const App=()=>{
    const[count,setCount]=useState(0);
    const inc=()=>{
        setCount(c=>c+1);
    };
    return(
        <div>
            <ChildA/>
            <ChildB count={count} inc={inc} />
        </div>
    )
    
};
export default App;

import React from 'react';
const ChildA=()=>{
    console.log("Child A")
    return(
        <div>This is child A</div>
    )
    

}
export default ChildA;



const ChildB=({count,inc})=>{
    console.log("Child B render")
    return(
        <div>
            <h1>Count:{count}</h1>
            <button onClick={inc}>inc</button>
        </div>
    )
}
export default ChildB;



 import React,{useState} from 'react';
import './App.css';
// const Counter=()=>{
// const[count,setCount]=useState(0)
// return(
//   <div class="name">
//     <h1 >{count}</h1>
//     <button onClick={()=>setCount(count+1)} class='name1'> inc</button>
//     <button onClick={()=>setCount(count-1)} class='name1'>dec</button>
//   </div>
// );
// }
// export default Counter;
// const ThemeToggler=()=>{
//   const[theme,setTheme]=useState('light')
//   const toggleTheme=()=>{
//     setTheme(prevTheme=>(prevTheme==='ligth'?'dark':'ligth'))
//   }
//   return(
//     <div style={{backgroundColor:theme==='ligth'?'white':'black',color:theme==='ligth'?'black':'white', textAlign:'center'}}>
//       <h1>The current theme is{theme}</h1>
//       <button onClick={toggleTheme}>toggletheme</button>
//     </div>
//   )
// };
// export default  ThemeToggler;
// import ChildA from './ChildA.js';
// import ChildB from './ChildB.js';
// const App=()=>{
//     const[count,setCount]=useState(0);
//     const inc=()=>{
//         setCount(c=>c+1);
//     };
//     return(
//         <div>
//             <ChildA/>
//             <ChildB count={count} inc={inc} />
//         </div>
//     )
    
// };
// export default App;
// 
// 
// function appleReducer(state=3,action){
//   switch(action.type){
//     case 'ADD_APPLE':
//       return state+1;
//     case 'eat apple':
//       return state-1;
//     default:

//        return state;
//   }
// }
// function App(){
//   const[state,dispatch]=useReducer(appleReducer,3)
//   return(
//     <div>
//       <h1>Apple Conter</h1>
//       <p>No of apples:{state}</p>
//       <img src="./image.png" alt="Apple"></img>
//       <button onClick={()=>dispatch({type: 'ADD_APPLE'}) }>Add apple</button>
//       <button onClick={()=>dispatch({type:'eat apple'})}>eat apple</button>
//     </div>
//   )
// }
// export default App;




  import React, { use, useState } from 'react';
 import './App.css';
// // const Counter=()=>{
// // const[count,setCount]=useState(0)
// // return(
// //   <div class="name">
// //     <h1 >{count}</h1>
// //     <button onClick={()=>setCount(count+1)} class='name1'> inc</button>
// //     <button onClick={()=>setCount(count-1)} class='name1'>dec</button>
// //   </div>
// // );
// // }
// // export default Counter;
// // const ThemeToggler=()=>{
// //   const[theme,setTheme]=useState('light')
// //   const toggleTheme=()=>{
// //     setTheme(prevTheme=>(prevTheme==='ligth'?'dark':'ligth'))
// //   }
// //   return(
// //     <div style={{backgroundColor:theme==='ligth'?'white':'black',color:theme==='ligth'?'black':'white', textAlign:'center'}}>
// //       <h1>The current theme is{theme}</h1>
// //       <button onClick={toggleTheme}>toggletheme</button>
// //     </div>
// //   )
// // };
// // export default  ThemeToggler;
// // import ChildA from './ChildA.js';
// // import ChildB from './ChildB.js';
// // const App=()=>{
// //     const[count,setCount]=useState(0);
// //     const inc=()=>{
// //         setCount(c=>c+1);
// //     };
// //     return(
// //         <div>
// //             <ChildA/>
// //             <ChildB count={count} inc={inc} />
// //         </div>
// //     )
    
// // };
// // export default App;
// // 
// // 
// // function appleReducer(state=3,action){
// //   switch(action.type){
// //     case 'ADD_APPLE':
// //       return state+1;
// //     case 'eat apple':
// //       return state-1;
// //     default:

// //        return state;
// //   }
// // }
// // function App(){
// //   const[state,dispatch]=useReducer(appleReducer,3)
// //   return(
// //     <div>
// //       <h1>Apple Conter</h1>
// //       <p>No of apples:{state}</p>
// //       <img src="./image.png" alt="Apple"></img>
// //       <button onClick={()=>dispatch({type: 'ADD_APPLE'}) }>Add apple</button>
// //       <button onClick={()=>dispatch({type:'eat apple'})}>eat apple</button>
// //     </div>
// //   )
// // }
// // export default App;
// import React from 'react';
// import { ListProvider } from './ListContext';
// import AddItem from './AddItem';
// import ItemList from './ItemList';

// const App = () => {
//     return (
//         <ListProvider>
//             <h1>Item Management App</h1>
//             <AddItem />
//             <ItemList />
//         </ListProvider>
//     );
// };

// export default App;
// import React,{useState,useEffect,useRef} from "react";
// function CounterWithPrev(){
//     const [count,setCount]=useState(0);
//     const prevCoutRef=useRef();
//     useEffect(()=>{
//         prevCoutRef.current=count;
//     },[count])

    
//     return(
//         <div>
//             <p>current count:{count}</p>
//             <p>preveCount:{prevCoutRef.current}</p>
//             <button onClick={()=>setCount(count+1)}>increment</button>
//         </div>
//     );
// };
// export default CounterWithPrev;

// function App(){
//     const handleClick = ()=>{
//         alert("Button Clicked")
//     }
//     return(
//         <button onClick={handleClick}>clickMe</button>
//     )
// }
// function App(){
//     const[text,setText]=useState('')
//     const handleChange=(event)=>{
//         setText(event.target.value)
//     }
//     return(
//         <div>
//             <input type="text" value={text} onChange={handleChange}/>
//             <p>enter a text:{text}</p>

//         </div>
//     )
// }
// 

function App(){
    const[key,setKey]=useState("")
    const handleKeyDown=(event)=>{
        setKey(event.key)
    }
    return(
        <div>
            <h1> welcome to venkata</h1>
            {key&&<h2>pressed key:</h2>}
            <input typr="text" onKeyDown={handleKeyDown} placeholder='enter a text'/>
        </div>
    )

}
export default App;


